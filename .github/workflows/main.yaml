name: CI - deploy

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ORGANIZATION_ID: ckmzjm22937931d35puw3tcdo
      DEPLOYMENT_ID: cktlwu88p100511dykrye08jlu
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d-%HT%M-%S')"
    - uses: actions/checkout@v1
    - name: Publish to Astronomer.io
      uses: elgohr/Publish-Docker-Github-Action@2.6
      with:
        name: ${{ env.ORGANIZATION_ID }}/${{ env.DEPLOYMENT_ID }}:deploy-${{ steps.date.outputs.date }}
        username: ${{ secrets.CLIENT_ID }}
        password: ${{ secrets.CLIENT_SECRET }}
        registry: images.astronomer-dev.cloud

    - name: Get auth token
      id: token
      run: |
        token=$( curl --location --request POST 'https://auth.astronomer-dev.io/oauth/token' \
        --header 'content-type: application/json' \
        --data-raw '{ "client_id": "${{ secrets.CLIENT_ID }}","client_secret": "${{ secrets.CLIENT_SECRET }}","audience": "astronomer-ee","grant_type":"client_credentials"}' | jq -r '.access_token' )
        echo "::set-output name=auth_token::$token"

    - name: Create image
      id: image
      run: |
        image=$( curl --location --request POST 'https://api.astronomer-dev.io/hub/v1' \
        --header 'Authorization: Bearer ${{ steps.token.outputs.auth_token }}' \
        --header 'Content-Type: application/json' \
        --data-raw '{"query":"mutation imageCreate(\n    $input: ImageCreateInput!\n) {\n    imageCreate (\n    input: $input\n) {\n    id\n    tag\n    repository\n    digest\n    env\n    labels\n    deploymentId\n  }\n}","variables":{"input":{"deploymentId":"${{ env.DEPLOYMENT_ID }}","tag":"deploy-${{ steps.date.outputs.date }}"}}}' | jq -r '.data.imageCreate.id')
        echo "::set-output name=image_id::$image"

    - name: Deploy image
      run: |
        curl --location --request POST 'https://api.astronomer-dev.io/hub/v1' \
        --header 'Authorization: Bearer ${{ steps.token.outputs.auth_token }}' \
        --header 'Content-Type: application/json' \
        --data-raw '{"query":"mutation imageDeploy(\n    $input: ImageDeployInput!\n  ) {\n    imageDeploy(\n      input: $input\n    ) {\n      id\n      deploymentId\n      digest\n      env\n      labels\n      name\n      tag\n      repository\n    }\n}","variables":{"input":{"id":"${{ steps.image.outputs.image_id }}","tag":"deploy-${{ steps.date.outputs.date }}","repository":"images.astronomer-dev.cloud/${{ env.ORGANIZATION_ID }}/${{ env.DEPLOYMENT_ID }}"}}}'
