name: CI - deploy

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d-%HT%M-%S')"
    - uses: actions/checkout@v1
    - name: Publish to Astronomer.io
      uses: elgohr/Publish-Docker-Github-Action@2.6
      with:
        name: ckmzjm22937931d35puw3tcdo/cktlwu88p100511dykrye08jlu:deploy-${{ steps.date.outputs.date }}
        username: QdFnVDgr4RmQOcBqxNd3MlNDO5QxAvV9
        password: 8lqYzBu2WDnlPiLfAHiKt8PIXTzlBWdQmg6DatSSIpvSqFK4Ro4Q8o12v3kfPocK
        registry: images.astronomer-dev.cloud
    - name: Get auth token
      id: token
      run: |
        token=$( curl --location --request POST 'https://auth.astronomer-dev.io/oauth/token' \
        --header 'content-type: application/json' \
        --data-raw '{ "client_id": "QdFnVDgr4RmQOcBqxNd3MlNDO5QxAvV9","client_secret": "8lqYzBu2WDnlPiLfAHiKt8PIXTzlBWdQmg6DatSSIpvSqFK4Ro4Q8o12v3kfPocK","audience": "astronomer-ee","grant_type":"client_credentials"}' | jq '.access_token' )
        $token_parsed=$( `sed -e 's/^"//' -e 's/"$//' <<<"$token"` )
        echo "::set-output name=auth_token::$token_parsed"
    - run: echo ${{ steps.token.outputs.auth_token }}
    - name: Create image
      id: image
      run: |
        image=$( curl --location --request POST 'https://api.astronomer-dev.io/hub/v1' \
        --header 'Authorization: Bearer ${{ steps.token.outputs.auth_token }}' \
        --header 'Content-Type: application/json' \
        --data-raw '{"query":"mutation imageCreate(\n    $input: ImageCreateInput!\n) {\n    imageCreate (\n    input: $input\n) {\n    id\n    tag\n    repository\n    digest\n    env\n    labels\n    deploymentId\n  }\n}","variables":{"input":{"deploymentId":"cktlwu88p100511dykrye08jlu","tag":"deploy-${{ steps.date.outputs.date }}"}}}' )
        echo "::set-output name=image_id::$image"
    - run: echo ${{ steps.image.outputs.image_id }}
